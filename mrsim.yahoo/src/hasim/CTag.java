package hasim;

import java.util.Comparator;

public enum CTag {

	MAP_INPUT_RECORDS, MAP_OUTPUT_RECORDS, MAP_SKIPPED_RECORDS,

	MAP_INPUT_SIZE, MAP_OUTPUT_SIZE,

	COMBINE_INPUT_RECORDS, COMBINE_OUTPUT_RECORDS,

	COMBINE_INPUT_SIZE, COMBINE_OUTPUT_SIZE,

	COMBINE_INPUT_GROUPS, COMBINE_OUTPUT_GROUPS,

	REDUCE_INPUT_GROUPS,
	// Reduce_shuffle_bytes,

	REDUCE_INPUT_RECORDS, REDUCE_OUTPUT_RECORDS, REDUCE_SKIPPED_GROUPS, REDUCE_SKIPPED_RECORDS,

	SPILLED_RECORDS, START_TIME, STOP_TIME,

	REDUCE_SHUFFLE_BYTES,

	FILE_BYTES_READ, FILE_BYTES_WRITTEN,

	HDFS_BYTES_READ, HDFS_BYTES_WRITTEN,

	HDD_READ, HDD_WRITE, CPU_WORK, NET_IN, NET_OUT,

	test, FILE_BYTES_READ_TEST, FILE_BYTES_WRITTEN_TEST, MAP_OUTPUT_BYTES, JOB_START_TIME, JOB_STOP_TIME, JOB_TOTAL_TIME, DURATION, SHUFFLE, process_time, avMappersTime, avReducersTime,

	IMPORT_MAP_LOCAL, IMPORT_MAP_INRACK, IMPORT_MAP_ALL

	;

	public static Comparator<CTag> ctagComp = new Comparator<CTag>() {
		@Override
		public int compare(CTag o1, CTag o2) {
			return o1.toString().compareTo(o2.toString());
		}
	};

}
